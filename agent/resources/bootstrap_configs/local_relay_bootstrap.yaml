# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You may
# not use this file except in compliance with the License. A copy of the
# License is located at
#
#	http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

static_resources:
  listeners:
    - name: ingress_listener_xds_relay
      address:
        socketAddress:
          address: 127.0.0.1
          portValue: $APPNET_LOCAL_RELAY_LISTENER_PORT
      per_connection_buffer_limit_bytes: $RELAY_BUFFER_LIMIT_BYTES
      default_filter_chain:
        filters:
          - name: http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_relay
              stream_idle_timeout: $RELAY_STREAM_IDLE_TIMEOUT
              http_filters:
                - name: envoy.filters.http.grpc_web
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                - name: envoy.filters.http.aws_request_signing
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning
                    service_name: $SERVICE_NAME
                    region: $AWS_REGION
                    host_rewrite: $APPNET_MANAGEMENT_DOMAIN_NAME
                    use_unsigned_payload: true
                    match_excluded_headers:
                      - exact: te
                      - prefix: x
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: ingress_appnet_route
                virtual_hosts:
                  - name: appnet_management_service
                    domains: [ "*" ]
                    routes:
                      - match: { prefix: "/" }
                        route:
                          cluster: appnet_management_cluster
  clusters:
    - name: appnet_management_cluster
      type: logical_dns
      connect_timeout: 5s
      # DNS resolver will perform a lookup for both IPv4 and IPv6 families, and return all resolved addresses.
      # Happy Eyeballs will then be enabled for upstream connections.
      # https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/connection_pooling#happy-eyeballs-support
      dns_lookup_family: ALL
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      upstream_connection_options:
        # Default idle timeout in NLB is 350s and in ALB is 60s. So picking a value less than 60s.
        # https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#envoy-v3-api-msg-config-core-v3-tcpkeepalive
        tcp_keepalive:
          keepalive_time: 45 # The number of seconds a connection needs to be idle before keep-alive probes start being sent.
          keepalive_interval: 45 # The number of seconds between keep-alive probes.
      lb_policy: round_robin
      per_connection_buffer_limit_bytes: $RELAY_BUFFER_LIMIT_BYTES
      load_assignment:
        cluster_name: appnet_management_cluster
        endpoints:
          - lb_endpoints:
              endpoint: { address: { socket_address: { address: $APPNET_MANAGEMENT_DOMAIN_NAME, port_value: $APPNET_MANAGEMENT_PORT }}}
      health_checks:
        - timeout: 3s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 2
          tcp_health_check: {}
      transport_socket:
        name: transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            validation_context:
              trusted_ca:
                filename: /etc/pki/tls/cert.pem
admin:
  address:
    socketAddress:
      address: $APPNET_LOCAL_RELAY_ADMIN_HOST
      portValue: $APPNET_LOCAL_RELAY_ADMIN_PORT
layered_runtime:
  layers:
    - name: "static_layer_0"
      staticLayer:
        re2.max_program_size.error_level: 1000
        envoy.reloadable_features.use_http_client_to_fetch_aws_credentials: $ENVOY_USE_HTTP_CLIENT_TO_FETCH_AWS_CREDENTIALS
    - name: "admin_layer"
      adminLayer: {}
